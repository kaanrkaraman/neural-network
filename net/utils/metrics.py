import numpy as np


def mse(y_true: np.ndarray, y_pred: np.ndarray) -> float:
    """
    Calculates the Mean Squared Error (MSE) between two numpy arrays. This is a
    common metric used to evaluate the difference between predicted and actual
    values in regression tasks. The function takes in the true values and the
    predicted values and computes the square of the differences, averages them,
    and returns a single float value representing the MSE.

    :param y_true: Ground truth values. A numpy array containing the actual
        values of the target variable.
    :param y_pred: Predicted values. A numpy array containing the predicted
        values generated by a regression model.
    :return: The Mean Squared Error (MSE) as a float.
    """
    return float(np.mean((y_true - y_pred) ** 2))


def rmse(y_true: np.ndarray, y_pred: np.ndarray) -> float:
    """
    Calculates the Root Mean Square Error (RMSE) between two arrays of true
    values and predicted values. RMSE is a standard statistical measure used
    to evaluate the accuracy of a model by computing the square root of the
    mean squared error (MSE).

    :param y_true: Ground truth (correct) target values
    :param y_pred: Predicted target values
    :return: RMSE value as a float
    :rtype: float
    """
    return float(np.sqrt(mse(y_true, y_pred)))


def mae(y_true: np.ndarray, y_pred: np.ndarray) -> float:
    """
    Calculates the Mean Absolute Error (MAE) between the predicted and true values.
    The MAE is a metric for the average magnitude of errors in a set of predictions,
    without considering their direction. It provides a robust and intuitive measure
    of the prediction error by averaging the absolute differences between the predicted
    and actual values.

    :param y_true: Ground truth (actual) values.
    :type y_true: numpy.ndarray
    :param y_pred: Predicted values.
    :type y_pred: numpy.ndarray
    :return: The calculated Mean Absolute Error as a float.
    :rtype: float
    """
    return float(np.mean(np.abs(y_true - y_pred)))
